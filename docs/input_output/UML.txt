digraph Lab7_2 { 
	rankdir=BT;
	splines=ortho;

	Component[
		shape="record",
		style = "filled", fillcolor = "Green";
		label = "{Component\n\<\<Component\>\>
		
		|
		- log : PlatformLogger\l
		- eventLog : PlatformLogger\l
		- focusLog : PlatformLogger\l
		- mixingLog : PlatformLogger\l
		 peer : ComponentPeer\l
		 parent : Container\l
		 appContext : AppContext\l
		 x : int\l
		 y : int\l
		 width : int\l
		 height : int\l
		...\l
		|
		 getObjectLock() : Object\l
		 getAccessControlContext() : AccessControlContext\l
		 getBoundsOp() : int\l
		 setBoundsOp(int) : void\l
		# Component() : void\l
		 initializeFocusTraversalKeys() : void\l
		 constructComponentName() : String\l
		+ getName() : String\l
		+ setName(String) : void\l
		+ getParent() : Container\l
		 getParent_NoClientCode() : Container\l
		...\l
		}"
	];

	Component -> Container[arrowhead="vee"];
	Component -> GraphicsConfiguration[arrowhead="vee"];
	Component -> Component[arrowhead="vee", style="dashed"];

	JComponent[
		shape="record",
		style = "filled", fillcolor = "Green";
		label = "{JComponent\n\<\<Decorator\>\>
		
		|
		- uiClassID : String\l
		- readObjectCallbacks : Hashtable\l
		- managingFocusForwardTraversalKeys : Set\l
		- managingFocusBackwardTraversalKeys : Set\l
		- NOT_OBSCURED : int\l
		- PARTIALLY_OBSCURED : int\l
		- COMPLETELY_OBSCURED : int\l
		 DEBUG_GRAPHICS_LOADED : boolean\l
		- INPUT_VERIFIER_SOURCE_KEY : Object\l
		- isAlignmentXSet : boolean\l
		- alignmentX : float\l
		...\l
		|
		 safelyGetGraphics(Component) : Graphics\l
		 safelyGetGraphics(Component, Component) : Graphics\l
		 getGraphicsInvoked(Component) : void\l
		- isComponentObtainingGraphicsFrom(Component) : boolean\l
		 getManagingFocusForwardTraversalKeys() : Set\l
		 getManagingFocusBackwardTraversalKeys() : Set\l
		- fetchRectangle() : Rectangle\l
		- recycleRectangle(Rectangle) : void\l
		+ setInheritsPopupMenu(boolean) : void\l
		+ getInheritsPopupMenu() : boolean\l
		+ setComponentPopupMenu(JPopupMenu) : void\l
		...\l
		}"
	];

	JComponent -> Container [arrowhead="onormal"];
	JComponent -> Component[arrowhead="vee"];
	JComponent -> JComponent[arrowhead="vee", style="dashed"];

	Container[
		shape="record",
		style = "filled", fillcolor = "Green";
		label = "{Container\n\<\<Decorator\>\>
		
		|
		- log : PlatformLogger\l
		- eventLog : PlatformLogger\l
		- EMPTY_ARRAY : Component[]\l
		- component : List\l
		 layoutMgr : LayoutManager\l
		- dispatcher : LightweightDispatcher\l
		- focusTraversalPolicy : FocusTraversalPolicy\l
		- focusCycleRoot : boolean\l
		- focusTraversalPolicyProvider : boolean\l
		- printingThreads : Set\l
		- printing : boolean\l
		...\l
		|
		- initIDs() : void\l
		+ Container() : void\l
		 initializeFocusTraversalKeys() : void\l
		+ getComponentCount() : int\l
		+ countComponents() : int\l
		+ getComponent(int) : Component\l
		+ getComponents() : Component[]\l
		 getComponents_NoClientCode() : Component[]\l
		 getComponentsSync() : Component[]\l
		+ getInsets() : Insets\l
		+ insets() : Insets\l
		...\l
		}"
	];

	Container -> Component [arrowhead="onormal"];
	Container -> Component[arrowhead="vee"];
	Container -> Container[arrowhead="vee", style="dashed"];
	Container -> GraphicsConfiguration[arrowhead="vee", style="dashed"];

	Window[
		shape="record",
		style = "filled", fillcolor = "Yellow";
		label = "{Window\n\<\<Composite\>\>
		
		|
		 warningString : String\l
		 icons : List\l
		- temporaryLostComponent : Component\l
		 systemSyncLWRequests : boolean\l
		 syncLWRequests : boolean\l
		 beforeFirstShow : boolean\l
		- disposing : boolean\l
		 disposerRecord : Window_WindowDisposerRecord\l
		 OPENED : int\l
		 state : int\l
		- alwaysOnTop : boolean\l
		...\l
		|
		- initIDs() : void\l
		 Window(GraphicsConfiguration) : void\l
		- initGC(GraphicsConfiguration) : GraphicsConfiguration\l
		- init(GraphicsConfiguration) : void\l
		 Window() : void\l
		+ Window(Frame) : void\l
		+ Window(Window) : void\l
		+ Window(Window, GraphicsConfiguration) : void\l
		- ownedInit(Window) : void\l
		 constructComponentName() : String\l
		+ getIconImages() : List\l
		...\l
		}"
	];

	Window -> Container [arrowhead="onormal"];
	Window -> Component[arrowhead="vee"];
	Window -> GraphicsConfiguration[arrowhead="vee", style="dashed"];
	Window -> Frame[arrowhead="vee", style="dashed"];
	Window -> Window[arrowhead="vee", style="dashed"];
	Window -> GraphicsConfiguration[arrowhead="vee", label="\<\<adapts\>\>"];
	Window -> Frame[arrowhead="vee", label="\<\<adapts\>\>"];
	Window -> Window[arrowhead="vee", label="\<\<adapts\>\>"];
	Window -> Window[arrowhead="vee", label="\<\<adapts\>\>"];
	Window -> GraphicsConfiguration[arrowhead="vee", label="\<\<adapts\>\>"];

	Panel[
		shape="record",
		style = "filled", fillcolor = "Yellow";
		label = "{Panel\n\<\<Composite\>\>
		
		|
		- base : String\l
		- nameCounter : int\l
		- serialVersionUID : long\l
		|
		+ Panel() : void\l
		+ Panel(LayoutManager) : void\l
		 constructComponentName() : String\l
		+ addNotify() : void\l
		+ getAccessibleContext() : AccessibleContext\l
		 <clinit>() : void\l
		}"
	];

	Panel -> Container [arrowhead="onormal"];

	Frame[
		shape="record",
		style = "filled", fillcolor = "Yellow";
		label = "{Frame\n\<\<Composite\>\>
		
		|
		+ DEFAULT_CURSOR : int\l
		+ CROSSHAIR_CURSOR : int\l
		+ TEXT_CURSOR : int\l
		+ WAIT_CURSOR : int\l
		+ SW_RESIZE_CURSOR : int\l
		+ SE_RESIZE_CURSOR : int\l
		+ NW_RESIZE_CURSOR : int\l
		+ NE_RESIZE_CURSOR : int\l
		+ N_RESIZE_CURSOR : int\l
		+ S_RESIZE_CURSOR : int\l
		+ W_RESIZE_CURSOR : int\l
		...\l
		|
		+ Frame() : void\l
		+ Frame(GraphicsConfiguration) : void\l
		+ Frame(String) : void\l
		+ Frame(String, GraphicsConfiguration) : void\l
		- init(String, GraphicsConfiguration) : void\l
		 constructComponentName() : String\l
		+ addNotify() : void\l
		+ getTitle() : String\l
		+ setTitle(String) : void\l
		+ getIconImage() : Image\l
		+ setIconImage(Image) : void\l
		...\l
		}"
	];

	Frame -> Window [arrowhead="onormal"];
	Frame -> GraphicsConfiguration[arrowhead="vee", style="dashed"];
	Frame -> Frame[arrowhead="vee", style="dashed"];
	Frame -> GraphicsConfiguration[arrowhead="vee", label="\<\<adapts\>\>"];
	Frame -> GraphicsConfiguration[arrowhead="vee", label="\<\<adapts\>\>"];

	GraphicsConfiguration[
		shape="record",
		style = "filled", fillcolor = "blue";
		label = "{GraphicsConfiguration\n\<\<Singleton\>\>
		
		|
		- defaultBufferCaps : BufferCapabilities\l
		- defaultImageCaps : ImageCapabilities\l
		 _assertionsDisabled : boolean\l
		|
		# GraphicsConfiguration() : void\l
		+ getDevice() : GraphicsDevice\l
		+ createCompatibleImage(int, int) : BufferedImage\l
		+ createCompatibleImage(int, int, int) : BufferedImage\l
		+ createCompatibleVolatileImage(int, int) : VolatileImage\l
		+ createCompatibleVolatileImage(int, int, int) : VolatileImage\l
		+ createCompatibleVolatileImage(int, int, ImageCapabilities) : VolatileImage\l
		+ createCompatibleVolatileImage(int, int, ImageCapabilities, int) : VolatileImage\l
		+ getColorModel() : ColorModel\l
		+ getColorModel(int) : ColorModel\l
		+ getDefaultTransform() : AffineTransform\l
		...\l
		}"
	];


}