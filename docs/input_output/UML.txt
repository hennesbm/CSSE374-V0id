digraph Lab5_1 { 
	rankdir=BT;
	splines=ortho;

	App[
		shape="record",
		label = "{App\n
		|
		|
		+ App() : void\l
		+ main(String[]) : void\l
		}"
	];

	
	

	IteratorToEnumerationAdapter[
		shape="record",
		color = "red";
		label = "{IteratorToEnumerationAdapter\n\<\<Adapter\>\>
		
		|
		- itr : Iterator\l
		|
		+ IteratorToEnumerationAdapter(Iterator) : void\l
		+ hasMoreElements() : boolean\l
		+ nextElement() : Object\l
		}"
	];

	
	IteratorToEnumerationAdapter -> Enumeration[arrowhead="onormal", style="dashed"];
	IteratorToEnumerationAdapter -> Iterator[arrowhead="vee"];
	IteratorToEnumerationAdapter -> Iterator[arrowhead="vee", style="dashed"];
	IteratorToEnumerationAdapter -> Iterator[arrowhead="vee", label="\<\<adapts\>\>"];

	LinearTransformer[
		shape="record",
		label = "{LinearTransformer\n
		|
		- enumTion : Enumeration\l
		|
		+ LinearTransformer(Enumeration) : void\l
		+ transform(OutputStream) : void\l
		}"
	];

	
	LinearTransformer -> Enumeration[arrowhead="vee"];
	LinearTransformer -> Enumeration[arrowhead="vee", style="dashed"];
	

	Enumeration[
		shape="record",
		color = "red";
		label = "{Enumeration\n\<\<Target\>\>
		
		|
		|
		+ hasMoreElements() : boolean\l
		+ nextElement() : Object\l
		}"
	];

	
	

	Iterator[
		shape="record",
		color = "red";
		label = "{Iterator\n\<\<Adaptee\>\>
		
		|
		|
		+ hasNext() : boolean\l
		+ next() : Object\l
		+ remove() : void\l
		+ forEachRemaining(Consumer) : void\l
		}"
	];

	
	Iterator -> Consumer[arrowhead="vee", style="dashed"];
	

}